
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BINOP BOOL DEFINE ELSE ID IF IN INT LET MAP PRIM SIGN THEN TO\n    exp : term\n        | term binop exp\n        | IF exp THEN exp ELSE exp\n        | LET defrepetitions IN exp\n        | MAP idlist TO exp\n    defrepetitions : def\n                   | defrepetitions def\n    \n    term : unop term\n        | factor\n        | factor '(' explist ')'\n        | empty\n        | int\n        | bool\n    \n    factor : '(' exp ')'\n           | prim\n           | id\n    \n    explist : propexplist\n            | empty\n    \n    propexplist : exp\n                | exp ',' propexplist\n    \n    idlist : propidlist\n           | empty\n    propidlist : id\n                  | id ',' propidlistdef : id DEFINE exp ';'empty :bool : BOOL\n    unop : sign\n         | '~'\n    sign : SIGN\n    binop : sign\n          | BINOP\n    prim : PRIMid : IDint : INT"
    
_lr_action_items = {'IF':([0,3,8,18,21,22,23,33,36,37,39,40,53,54,],[3,3,3,-30,3,-31,-32,3,3,3,3,3,3,3,]),'LET':([0,3,8,18,21,22,23,33,36,37,39,40,53,54,],[4,4,4,-30,4,-31,-32,4,4,4,4,4,4,4,]),'MAP':([0,3,8,18,21,22,23,33,36,37,39,40,53,54,],[5,5,5,-30,5,-31,-32,5,5,5,5,5,5,5,]),'~':([0,3,6,8,12,13,18,21,22,23,33,36,37,39,40,53,54,],[13,13,13,13,-28,-29,-30,13,-31,-32,13,13,13,13,13,13,13,]),'(':([0,3,6,7,8,12,13,14,15,18,19,20,21,22,23,33,36,37,39,40,46,53,54,],[8,8,8,33,8,-28,-29,-15,-16,-30,-33,-34,8,-31,-32,8,8,8,8,8,-14,8,8,]),'BINOP':([0,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,32,33,36,37,39,40,44,46,52,53,54,],[-26,23,-26,-26,-9,-26,-11,-12,-13,-28,-29,-15,-16,-35,-27,-30,-33,-34,-26,-31,-32,-8,-26,-26,-26,-26,-26,-11,-14,-10,-26,-26,]),'SIGN':([0,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,32,33,36,37,39,40,44,46,52,53,54,],[18,18,18,18,-9,18,-11,-12,-13,-28,-29,-15,-16,-35,-27,-30,-33,-34,18,-31,-32,-8,18,18,18,18,18,-11,-14,-10,18,18,]),'$end':([0,1,2,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,32,35,37,40,46,48,50,52,54,57,],[-26,0,-1,-26,-9,-11,-12,-13,-28,-29,-15,-16,-35,-27,-30,-33,-34,-26,-31,-32,-8,-2,-26,-26,-14,-4,-5,-10,-26,-3,]),'INT':([0,3,6,8,12,13,18,21,22,23,33,36,37,39,40,53,54,],[16,16,16,16,-28,-29,-30,16,-31,-32,16,16,16,16,16,16,16,]),'BOOL':([0,3,6,8,12,13,18,21,22,23,33,36,37,39,40,53,54,],[17,17,17,17,-28,-29,-30,17,-31,-32,17,17,17,17,17,17,17,]),'PRIM':([0,3,6,8,12,13,18,21,22,23,33,36,37,39,40,53,54,],[19,19,19,19,-28,-29,-30,19,-31,-32,19,19,19,19,19,19,19,]),'ID':([0,3,4,5,6,8,12,13,18,21,22,23,25,26,33,36,37,38,39,40,41,53,54,55,],[20,20,20,20,20,20,-28,-29,-30,20,-31,-32,20,-6,20,20,20,-7,20,20,20,20,20,-25,]),'THEN':([2,3,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,32,35,37,40,46,48,50,52,54,57,],[-1,-26,-26,-9,-11,-12,-13,-28,-29,-15,-16,-35,-27,-30,-33,-34,-26,-31,-32,36,-8,-2,-26,-26,-14,-4,-5,-10,-26,-3,]),')':([2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,32,33,34,35,37,40,42,43,44,45,46,48,50,52,53,54,56,57,],[-1,-26,-9,-26,-11,-12,-13,-28,-29,-15,-16,-35,-27,-30,-33,-34,-26,-31,-32,-8,-26,46,-2,-26,-26,52,-17,-11,-19,-14,-4,-5,-10,-26,-26,-20,-3,]),',':([2,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,33,35,37,40,44,45,46,48,50,52,53,54,57,],[-1,-26,-9,-11,-12,-13,-28,-29,-15,-16,-35,-27,-30,-33,-34,-26,-31,-32,41,-8,-26,-2,-26,-26,-11,53,-14,-4,-5,-10,-26,-26,-3,]),'ELSE':([2,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,32,35,36,37,40,46,47,48,50,52,54,57,],[-1,-26,-9,-11,-12,-13,-28,-29,-15,-16,-35,-27,-30,-33,-34,-26,-31,-32,-8,-2,-26,-26,-26,-14,54,-4,-5,-10,-26,-3,]),';':([2,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,32,35,37,39,40,46,48,49,50,52,54,57,],[-1,-26,-9,-11,-12,-13,-28,-29,-15,-16,-35,-27,-30,-33,-34,-26,-31,-32,-8,-2,-26,-26,-26,-14,-4,55,-5,-10,-26,-3,]),'TO':([5,20,28,29,30,31,51,],[-26,-34,40,-21,-22,-23,-24,]),'DEFINE':([20,27,],[-34,39,]),'IN':([25,26,38,55,],[37,-6,-7,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([0,3,8,21,33,36,37,39,40,53,54,],[1,24,34,35,45,47,48,49,50,45,57,]),'term':([0,3,6,8,21,33,36,37,39,40,53,54,],[2,2,32,2,2,2,2,2,2,2,2,2,]),'unop':([0,3,6,8,21,33,36,37,39,40,53,54,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'factor':([0,3,6,8,21,33,36,37,39,40,53,54,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'empty':([0,3,5,6,8,21,33,36,37,39,40,53,54,],[9,9,30,9,9,9,44,9,9,9,9,9,9,]),'int':([0,3,6,8,21,33,36,37,39,40,53,54,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'bool':([0,3,6,8,21,33,36,37,39,40,53,54,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'sign':([0,2,3,6,8,21,33,36,37,39,40,53,54,],[12,22,12,12,12,12,12,12,12,12,12,12,12,]),'prim':([0,3,6,8,21,33,36,37,39,40,53,54,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'id':([0,3,4,5,6,8,21,25,33,36,37,39,40,41,53,54,],[15,15,27,31,15,15,15,27,15,15,15,15,15,31,15,15,]),'binop':([2,],[21,]),'defrepetitions':([4,],[25,]),'def':([4,25,],[26,38,]),'idlist':([5,],[28,]),'propidlist':([5,41,],[29,51,]),'explist':([33,],[42,]),'propexplist':([33,53,],[43,56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> term','exp',1,'p_exp','parserules.py',8),
  ('exp -> term binop exp','exp',3,'p_exp','parserules.py',9),
  ('exp -> IF exp THEN exp ELSE exp','exp',6,'p_exp','parserules.py',10),
  ('exp -> LET defrepetitions IN exp','exp',4,'p_exp','parserules.py',11),
  ('exp -> MAP idlist TO exp','exp',4,'p_exp','parserules.py',12),
  ('defrepetitions -> def','defrepetitions',1,'p_exp','parserules.py',13),
  ('defrepetitions -> defrepetitions def','defrepetitions',2,'p_exp','parserules.py',14),
  ('term -> unop term','term',2,'p_term','parserules.py',23),
  ('term -> factor','term',1,'p_term','parserules.py',24),
  ('term -> factor ( explist )','term',4,'p_term','parserules.py',25),
  ('term -> empty','term',1,'p_term','parserules.py',26),
  ('term -> int','term',1,'p_term','parserules.py',27),
  ('term -> bool','term',1,'p_term','parserules.py',28),
  ('factor -> ( exp )','factor',3,'p_factor','parserules.py',35),
  ('factor -> prim','factor',1,'p_factor','parserules.py',36),
  ('factor -> id','factor',1,'p_factor','parserules.py',37),
  ('explist -> propexplist','explist',1,'p_explist','parserules.py',44),
  ('explist -> empty','explist',1,'p_explist','parserules.py',45),
  ('propexplist -> exp','propexplist',1,'p_propexplist','parserules.py',52),
  ('propexplist -> exp , propexplist','propexplist',3,'p_propexplist','parserules.py',53),
  ('idlist -> propidlist','idlist',1,'p_idlist','parserules.py',60),
  ('idlist -> empty','idlist',1,'p_idlist','parserules.py',61),
  ('propidlist -> id','propidlist',1,'p_propidlist','parserules.py',67),
  ('propidlist -> id , propidlist','propidlist',3,'p_propidlist','parserules.py',68),
  ('def -> id DEFINE exp ;','def',4,'p_def','parserules.py',73),
  ('empty -> <empty>','empty',0,'p_empty','parserules.py',78),
  ('bool -> BOOL','bool',1,'p_bool','parserules.py',83),
  ('unop -> sign','unop',1,'p_unop','parserules.py',89),
  ('unop -> ~','unop',1,'p_unop','parserules.py',90),
  ('sign -> SIGN','sign',1,'p_sign','parserules.py',96),
  ('binop -> sign','binop',1,'p_binop','parserules.py',102),
  ('binop -> BINOP','binop',1,'p_binop','parserules.py',103),
  ('prim -> PRIM','prim',1,'p_prim','parserules.py',109),
  ('id -> ID','id',1,'p_id','parserules.py',114),
  ('int -> INT','int',1,'p_int','parserules.py',119),
]
